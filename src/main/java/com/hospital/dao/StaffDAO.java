package com.hospital.dao;

import java.sql.*;

public class StaffDAO {

    private static final String URL = "jdbc:postgresql://localhost:5432/hospital_db";
    private static final String USER = "postgres";
    private static final String PASSWORD = "Erzhan123@"; // –∑–∞–º–µ–Ω–∏

    public void showNurses() {
        String sql = """
            SELECT full_name, hire_date, salary
            FROM nurses
            ORDER BY hire_date
        """;

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("ü©∫ –ú–µ–¥—Å—ë—Å—Ç—Ä—ã:");
            while (rs.next()) {
                System.out.printf("‚Äì %s, –ü—Ä–∏–Ω—è—Ç–∞: %s, –ó–∞—Ä–ø–ª–∞—Ç–∞: %.2f%n",
                        rs.getString("full_name"),
                        rs.getDate("hire_date"),
                        rs.getDouble("salary"));
            }

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–µ–¥—Å–µ—Å—Ç—ë—Ä:");
            e.printStackTrace();
        }
    }

    public void showDoctors() {
        String sql = """
            SELECT full_name, hire_date, salary
            FROM doctors
            ORDER BY hire_date
        """;

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("ü©ª –õ–µ—á–∞—â–∏–µ –≤—Ä–∞—á–∏:");
            while (rs.next()) {
                System.out.printf("‚Äì %s, –ü—Ä–∏–Ω—è—Ç: %s, –ó–∞—Ä–ø–ª–∞—Ç–∞: %.2f%n",
                        rs.getString("full_name"),
                        rs.getDate("hire_date"),
                        rs.getDouble("salary"));
            }

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤—Ä–∞—á–µ–π:");
            e.printStackTrace();
        }
    }
    // –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–∞—á–∞ (user_id –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ users)
    public void addDoctor(int userId, String fullName, Date hireDate, double salary) {
        String sql = """
        INSERT INTO doctors(user_id, full_name, hire_date, salary)
        VALUES (?, ?, ?, ?)
    """;

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, userId);
            stmt.setString(2, fullName);
            stmt.setDate(3, hireDate);
            stmt.setDouble(4, salary);

            stmt.executeUpdate();
            System.out.println("‚úî –í—Ä–∞—á –¥–æ–±–∞–≤–ª–µ–Ω: " + fullName);

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤—Ä–∞—á–∞:");
            e.printStackTrace();
        }
    }

    // –î–æ–±–∞–≤–∏—Ç—å –º–µ–¥—Å–µ—Å—Ç—Ä—É
    public void addNurse(int userId, String fullName, Date hireDate, double salary) {
        String sql = """
        INSERT INTO nurses(user_id, full_name, hire_date, salary)
        VALUES (?, ?, ?, ?)
    """;

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, userId);
            stmt.setString(2, fullName);
            stmt.setDate(3, hireDate);
            stmt.setDouble(4, salary);

            stmt.executeUpdate();
            System.out.println("‚úî –ú–µ–¥—Å–µ—Å—Ç—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: " + fullName);

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ–¥—Å–µ—Å—Ç—Ä—ã:");
            e.printStackTrace();
        }
    }
    // –ü–æ–¥—Å—á—ë—Ç –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
    public int getPatientCount() {
        String sql = "SELECT COUNT(*) AS cnt FROM patients";

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                return rs.getInt("cnt");
            }

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á—ë—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:");
            e.printStackTrace();
        }
        return 0;
    }
    // –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π (–≤—Ä–∞—á –∏–ª–∏ –º–µ–¥—Å–µ—Å—Ç—Ä–∞)
    public String getMaxSalaryStaff() {
        String sql = """
        SELECT full_name, salary, role FROM (
          SELECT full_name, salary, 'doctor' AS role FROM doctors
          UNION ALL
          SELECT full_name, salary, 'medassistant' AS role FROM nurses
        ) AS t
        ORDER BY salary DESC
        LIMIT 1
    """;

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                return String.format("%s (%s), –∑–∞—Ä–ø–ª–∞—Ç–∞: %.2f",
                        rs.getString("full_name"),
                        rs.getString("role"),
                        rs.getDouble("salary"));
            }

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π:");
            e.printStackTrace();
        }
        return "–î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç";
    }

    // –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π (–≤—Ä–∞—á –∏–ª–∏ –º–µ–¥—Å–µ—Å—Ç—Ä–∞)
    public String getMinSalaryStaff() {
        String sql = """
        SELECT full_name, salary, role FROM (
          SELECT full_name, salary, 'doctor' AS role FROM doctors
          UNION ALL
          SELECT full_name, salary, 'medassistant' AS role FROM nurses
        ) AS t
        ORDER BY salary ASC
        LIMIT 1
    """;

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                return String.format("%s (%s), –∑–∞—Ä–ø–ª–∞—Ç–∞: %.2f",
                        rs.getString("full_name"),
                        rs.getString("role"),
                        rs.getDouble("salary"));
            }

        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π:");
            e.printStackTrace();
        }
        return "–î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç";
    }

}

