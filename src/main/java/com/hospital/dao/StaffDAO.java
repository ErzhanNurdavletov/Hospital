package com.hospital.dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class StaffDAO {
    private static final String URL = "jdbc:postgresql://localhost:5432/hospital_db";
    private static final String USER = "postgres";
    private static final String PASSWORD = "Erzhan123@"; // –∑–∞–º–µ–Ω–∏—Ç–µ

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–¥—Å–µ—Å—Ç—ë—Ä
    public void showNurses() {
        String sql = "SELECT user_id, full_name, hire_date, salary FROM nurses ORDER BY full_name";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("ü©∫ –ú–µ–¥—Å–µ—Å—Ç—Ä—ã:");
            while (rs.next()) {
                System.out.printf("user_id=%d, %s, –ø—Ä–∏–Ω—è—Ç: %s, –∑–∞—Ä–ø–ª–∞—Ç–∞=%.2f%n",
                        rs.getInt("user_id"), rs.getString("full_name"), rs.getDate("hire_date"), rs.getDouble("salary"));
            }
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–µ–¥—Å–µ—Å—Ç—ë—Ä:");
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–∞—á–µ–π
    public void showDoctors() {
        String sql = "SELECT user_id, full_name, hire_date, salary FROM doctors ORDER BY full_name";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            System.out.println("ü©ª –õ–µ—á–∞—â–∏–µ –≤—Ä–∞—á–∏:");
            while (rs.next()) {
                System.out.printf("user_id=%d, %s, –ø—Ä–∏–Ω—è—Ç: %s, –∑–∞—Ä–ø–ª–∞—Ç–∞=%.2f%n",
                        rs.getInt("user_id"), rs.getString("full_name"), rs.getDate("hire_date"), rs.getDouble("salary"));
            }
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≤—Ä–∞—á–µ–π:");
        }
    }

    // –î–æ–±–∞–≤–∏—Ç—å –º–µ–¥—Å–µ—Å—Ç—Ä—É
    public void addNurse(int userId, String fullName, Date hireDate, double salary) {
        String sql = "INSERT INTO nurses(user_id, full_name, hire_date, salary) VALUES (?,?,?,?)";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, userId);
            stmt.setString(2, fullName);
            stmt.setDate(3, hireDate);
            stmt.setDouble(4, salary);
            stmt.executeUpdate();
            System.out.println("‚úî –ú–µ–¥—Å–µ—Å—Ç—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: " + fullName);
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ–¥—Å–µ—Å—Ç—Ä—ã:");
        }
    }

    // –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–∞—á–∞
    public void addDoctor(int userId, String fullName, Date hireDate, double salary) {
        String sql = "INSERT INTO doctors(user_id, full_name, hire_date, salary) VALUES (?,?,?,?)";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, userId);
            stmt.setString(2, fullName);
            stmt.setDate(3, hireDate);
            stmt.setDouble(4, salary);
            stmt.executeUpdate();
            System.out.println("‚úî –õ–µ—á–∞—â–∏–π –≤—Ä–∞—á –¥–æ–±–∞–≤–ª–µ–Ω: " + fullName);
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤—Ä–∞—á–∞:");
        }
    }

    // –£–¥–∞–ª–∏—Ç—å –º–µ–¥—Å–µ—Å—Ç—Ä—É –ø–æ user_id
    public void deleteNurse(int userId) {
        String sql = "DELETE FROM nurses WHERE user_id = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, userId);
            int cnt = stmt.executeUpdate();
            if (cnt > 0) System.out.println("‚úî –ú–µ–¥—Å–µ—Å—Ç—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ (user_id=" + userId + ")");
            else System.out.println("‚ùå –ú–µ–¥—Å–µ—Å—Ç—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ–¥—Å–µ—Å—Ç—Ä—ã:");
        }
    }

    // –£–¥–∞–ª–∏—Ç—å –≤—Ä–∞—á–∞ –ø–æ user_id
    public void deleteDoctor(int userId) {
        String sql = "DELETE FROM doctors WHERE user_id = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, userId);
            int cnt = stmt.executeUpdate();
            if (cnt > 0) System.out.println("‚úî –í—Ä–∞—á —É–¥–∞–ª—ë–Ω (user_id=" + userId + ")");
            else System.out.println("‚ùå –í—Ä–∞—á –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–∞—á–∞:");
        }
    }

//    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
//    public int getPatientCount() {
//        String sql = "SELECT COUNT(*) AS cnt FROM patients";
//        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
//             Statement stmt = conn.createStatement();
//             ResultSet rs = stmt.executeQuery(sql)) {
//            if (rs.next()) return rs.getInt("cnt");
//        } catch (SQLException e) {
//            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á—ë—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:");
//            e.printStackTrace();
//        }
//        return 0;
//    }

    // –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –º–∞–∫—Å. –∑–∞—Ä–ø–ª–∞—Ç–æ–π
    public String getMaxSalaryStaff() {
        String sql = "SELECT full_name, salary, role FROM ("
                + "SELECT full_name, salary, 'doctor' AS role FROM doctors "
                + "UNION ALL "
                + "SELECT full_name, salary, 'medassistant' AS role FROM nurses) t "
                + "ORDER BY salary DESC LIMIT 1";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            if (rs.next()) {
                return rs.getString("full_name") + " (" + rs.getString("role") + "), –∑–∞—Ä–ø–ª–∞—Ç–∞=" + rs.getDouble("salary");
            }
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–∞–∫—Å. –∑–∞—Ä–ø–ª–∞—Ç—ã:");
        }
        return "–î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç";
    }

    // –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –º–∏–Ω. –∑–∞—Ä–ø–ª–∞—Ç–æ–π
    public String getMinSalaryStaff() {
        String sql = "SELECT full_name, salary, role FROM ("
                + "SELECT full_name, salary, 'doctor' AS role FROM doctors "
                + "UNION ALL "
                + "SELECT full_name, salary, 'medassistant' AS role FROM nurses) t "
                + "ORDER BY salary ASC LIMIT 1";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            if (rs.next()) {
                return rs.getString("full_name") + " (" + rs.getString("role") + "), –∑–∞—Ä–ø–ª–∞—Ç–∞=" + rs.getDouble("salary");
            }
        } catch (SQLException e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–∏–Ω. –∑–∞—Ä–ø–ª–∞—Ç—ã:");
        }
        return "–î–∞–Ω–Ω—ã—Ö –Ω–µ—Ç";
    }
}
